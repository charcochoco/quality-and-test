name: Test
concurrency: production

on:
  push:
    branches: [ playwright ]
  pull_request:
    branches: [ playwright ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci
      
      - name: Set up Git authentication
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
            
      - name: üî¥ Delete remote badges branch
        run: git push origin --delete badges

      - name: ‚ûï Create badges branch
        run: git checkout -b badges

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests jest with Coverage
        run: npm run test:unit
      
      - name: ‚öôÔ∏è Generating coverage badges
        uses: jpb06/coverage-badges-action@latest
        with:
          branches: playwright
          target-branch: badges
          coverage-summary-path: ./coverage/coverage-summary.json 

      - name: ‚¨ÜÔ∏è Push badges branch
        run: git push origin badges

      - name: Start server
        run: |
          nohup npm start &
          sleep 10 
        env:
          PORT: 3030  

      - name: Wait for server to be ready
        run: |
          for i in {1..10}; do
            curl --fail http://localhost:3030 || sleep 3
          done

      - name: Run tests playwright
        run: npm run test:e2e

      - name: Generate Playwright report
        run: npm run test:e2e:report

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/

      - name: Display test results
        if: failure() # This step runs only if the tests fail
        run: cat ./test-results.txt || echo "No test results file found"
